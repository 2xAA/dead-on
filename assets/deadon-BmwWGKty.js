var u=Object.defineProperty;var h=(o,e,t)=>e in o?u(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var s=(o,e,t)=>h(o,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();const l=""+new URL("scheduler-processor.worklet-BbVo6w0e.js",import.meta.url).href;let d=!1;async function a(o){d||(await o.audioWorklet.addModule(l),d=!0)}class m{constructor(e){s(this,"_bpm");s(this,"ctx");s(this,"_ppqn");s(this,"schedulerNode",null);s(this,"tickCount",0);s(this,"_started",!1);s(this,"listeners",{tick:new Set});s(this,"timeOriginPerfNow",0);s(this,"timeOriginAudioTime",0);this._bpm=e.bpm,this.ctx=e.audioContext??new AudioContext,this._ppqn=e.ppqn??24}get started(){return this._started}get ppqn(){return this._ppqn}get bpm(){return this._bpm}async setupWorklet(){await a(this.ctx),this.schedulerNode=new AudioWorkletNode(this.ctx,"scheduler-processor",{processorOptions:{bpm:this.bpm,ppqn:this.ppqn}})}async start(){this.started||(this.schedulerNode||await this.setupWorklet(),this.tickCount=0,this.timeOriginPerfNow=performance.now(),this.timeOriginAudioTime=this.ctx.currentTime,this.schedulerNode.port.postMessage({type:"start",time:this.timeOriginPerfNow}),this.schedulerNode.port.onmessage=e=>{e.data.type==="tick"&&this.handleTick(e.data.scheduledTime)},this.schedulerNode.connect(this.ctx.destination),this._started=!0)}stop(){this.schedulerNode&&(this.schedulerNode.disconnect(),this.schedulerNode.port.onmessage=null,this.schedulerNode=null),this._started=!1}setBpm(e){var t;this._bpm=e,this.timeOriginPerfNow=performance.now(),this.timeOriginAudioTime=this.ctx.currentTime,(t=this.schedulerNode)==null||t.port.postMessage({type:"updateBPM",bpm:e,time:this.timeOriginPerfNow})}setPpqn(e){var t;this._ppqn=e,this.timeOriginPerfNow=performance.now(),this.timeOriginAudioTime=this.ctx.currentTime,(t=this.schedulerNode)==null||t.port.postMessage({type:"updatePPQN",ppqn:e,time:this.timeOriginPerfNow})}on(e,t){this.listeners[e].add(t)}off(e,t){this.listeners[e].delete(t)}handleTick(e){const t={scheduledTimeMs:e,audioTime:this.wallToAudioTime(e),tick:this.tickCount,bpm:this.bpm};this.tickCount++;for(const n of this.listeners.tick)n(t)}wallToAudioTime(e){return this.timeOriginAudioTime+(e-this.timeOriginPerfNow)/1e3}audioToWallTime(e){return this.timeOriginPerfNow+(e-this.timeOriginAudioTime)*1e3}static scheduleAt(e,t){const n=t-performance.now();n>0?setTimeout(e,n):e()}}export{m as D};
